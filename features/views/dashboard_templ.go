// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"media-server/features/views/template"
)

func DashboardStyles() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		return nil
	})
}

func DashboardScripts() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		return nil
	})
}

func DashboardPage(alerts ...string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var4 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<style>\n            body {\n                font-family: Arial, sans-serif;\n                background-color: #f4f4f4;\n                margin: 0;\n                padding: 20px;\n                max-height: 100dvh;\n                overflow-y: hidden;\n            }\n\n            .title {\n                font-size:xx-large;\n                color: #00463d;\n                font-weight: 700;\n                margin-bottom: 1vh;\n                    \n                @media (min-width: 769px) {\n                text-align: center;\n                }\n\n                @media (max-width: 768px) and (min-width: 641px) {\n                text-align: center;\n                }\n\n                @media (max-width: 640px) {\n                    text-align:start;\n                }\n            }\n\n            .container-upload {\n                width: 100%;\n            }\n\n            .container-card {\n                display: flex;\n                flex-wrap: wrap;\n                flex-direction: row;\n                gap: 1vw;\n                max-height: 70dvh;\n                overflow-y: auto;\n            }\n\n            .card {\n                background: white;\n                border-radius: 8px;\n                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n                text-align: center;\n                padding-bottom: 8px;\n                    \n                @media (min-width: 769px) {\n                    flex: 23.9%;\n                    max-width: 23.9%;\n                }\n\n                @media (max-width: 768px) and (min-width: 641px) {\n                    flex: 31.9%;\n                    max-width: 31.9%;\n                }\n\n                @media (max-width: 640px) {\n                    flex: 48.9%;\n                    max-width: 48.9%;\n                }\n\n            }\n\n            .card .card-header {\n                padding: 8px 0px;\n                background: #00463d;\n                font-weight: 600;\n                color: white;\n                font-size: large;\n                border-radius: 8px 8px 0px 0px;\n            }\n\n            .card i {\n                font-size: 40px;\n                color: #007bff;\n            }\n\n            .card h3 {\n                margin: 10px 0;\n            }\n\n            .card button {\n                background-color: #00796b;\n                border: 0px solid white;\n                color: white;\n                border-radius: 3px;\n                padding: 2px 6px;\n                transition: all 0.5s ease;\n            }\n\n            .card button:hover {\n                background-color: #00443c;\n                transform: scale(1.1);\n                cursor: pointer;\n            }\n\n            .upload-button {\n                margin-top: 1vh;\n                background-color: #00796b;\n                color: white;\n                font-weight: 700;\n                transition: all 0.5s ease;\n            }\n\n            .upload-button:hover {\n                background-color: #004d40;\n                cursor: pointer;\n            }\n\n            .popup-download {\n                background-color: white;\n                border: 2px solid #009783;\n                border-radius: 3px;\n                border-radius: 8px 8px 8px 8px;\n                position: absolute;\n                right: 5px;\n                top: 5px;\n                padding: 5px 10px;\n                width: 10vw;\n                    \n                @media (min-width: 769px) {\n                width: 20vw;\n                }\n\n                @media (max-width: 768px) and (min-width: 641px) {\n                width: 30vw;\n                }\n\n                @media (max-width: 640px) {\n                width: 40vw;\n                }\n            }\n\n            .popup-download .title-popup {\n                color:#00463d;\n                margin-bottom: 0.5vh;\n            }\n\n            .popup-download .progress-bar {\n                background-color: #00796b;\n                border-radius: 5px;\n                margin-bottom: 0.5vh;\n                width: 0%;\n                height: 5px;\n            }\n\n            .popup-download .value {\n                color:#00463d;\n            }\n            \n        </style> <div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, alert := range alerts {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<p style=\"color: red;\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var5 string
				templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(alert)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `features/views/dashboard.templ`, Line: 178, Col: 46}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</p>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = template.BaseAdmin(template.BaseEntity{
			Styles:  DashboardStyles(),
			Scripts: DashboardScripts(),

			Page:        "Dashboard Page",
			Subtitle:    "",
			Breadcrumbs: []string{},
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var4), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
